<repository lastmodified='20191203111742.793'>
  <resource id='simsearch-bundle/1.4.3' symbolicname='simsearch-bundle' presentationname='SimSearch' uri='SimSearch-igb9.0.2-1.4.3.jar' version='1.4.3'>
    <description>DQoqKlNpbVNlYXJjaCoqIGlzIGFuICoqSUdCKiogaHR0cDovL2Jpb3Zpei5vcmcvaWdiLyAgcGx1Z2luIHRvIGlkZW50aWZ5IGFuZCBjb21wYXJlIG9jY3VycmVuY2VzIG9mIChlcGkpZ2Vub21pY3MgZmVhdHVyZSBwYXR0ZXJucyBpbiBtdWx0aXBsZSBnZW5vbWUgYnJvd3NlciB0cmFja3MuIA0KDQpJdCBpcyBiYXNlZCBvbiBhICoqcGF0dGVybi1zZWFyY2ggYWxnb3JpdGhtKiogdGhhdCBwcm92aWRlcyBiaW9sb2dpc3RzICAgd2l0aCAgIHRoZSAgIGFiaWxpdHksICAgb25jZSAgIHRoZXkgICBpZGVudGlmeSAgIGFuICAgaW50ZXJlc3RpbmcgZ2Vub21pYyAgcGF0dGVybiwgIHRvICBsb29rICBmb3IgIHNpbWlsYXIgIG9jY3VycmVuY2VzICBpbiAgdGhlICBkYXRhLCAgdGh1cw0KZmFjaWxpdGF0aW5nICAgZ2Vub21pYyAgIGRhdGEgICBhY2Nlc3MgICBhbmQgICB1c2UuICAgRm9yICAgZXhhbXBsZSwgICBzdWNoIHBhdHRlcm5zICAgY2FuICAgZGVzY3JpYmUgICBnZW5lICAgZXhwcmVzc2lvbiAgIHJlZ3VsYXRvcnkgICBETkEgICBhcmVhcyBpbmNsdWRpbmcgICBoZXRlcm9nZW5lb3VzICAgKGVwaSlnZW5vbWljICAgZmVhdHVyZXMgICAoZS5nLiAgICoqaGlzdG9uZSBtb2RpZmljYXRpb24qKiBhbmQvb3IgZGlmZmVyZW50ICoqdHJhbnNjcmlwdGlvbiBmYWN0b3IgYmluZGluZyByZWdpb25zKiopLiBJdCBpcyBwb3NzaWJsZSB0byBkZWZpbmUgY29tcGxleCBwYXR0ZXJucyBiYXNlZCBvbiBwZXJmZWN0IG1hdGNoZXMgaW4gIGdlbm9tZSAgdHJhY2tzICAocmVnaW9ucyAgdGhhdCAgbXVzdCAgbWF0Y2gpLCAgcGFydGlhbCAgbWF0Y2hlcyAocmVnaW9ucyB0aGF0IGFyZSBhbGxvd2VkIHRvIGJlIGFic2VudCksIGFuZCBuZWdhdGl2ZSBtYXRjaGVzIChmb3IgaW5zdGFuY2UgIHRvICBzZWFyY2ggIGZvciAgcmVnaW9ucyAgZGlzdGFudCAgZnJvbSAgdHJhbnNjcmlwdGlvbiAgc3RhcnQgc2l0ZXMpLg0KDQpUaGUgU2ltU2VhcmNoIGFsZ29yaXRobSBoYXMgYmVlbiBkZXZlbG9wZWQgdGhyb3VnaCBhIGNvbGxhYm9yYXRpb24gYmV0d2VlbiBVbml2ZXJzaXR5IG9mIEJvbG9nbmEgYW5kIFBvbGl0ZWNuaWNvIGRpIE1pbGFubywgYW5kIGlzIGluY2x1ZGVkIGluIHRoZSBTaW1TZWFyY2ggQXBwIGFzIHBhcnQgb2YgdGhlIFsqKkRBVEEtRFJJVkVOIEdFTk9NSUMgQ09NUFVUSU5HDQooR2VDbykqKl0gaHR0cDovL3d3dy5iaW9pbmZvcm1hdGljcy5kZWliLnBvbGltaS5pdC9nZWNvLyBwcm9qZWN0Lg0KDQpUaGUgU2ltU2VhcmNoIEFwcCBmb3IgSUdCIGlzIGRldmVsb3BwZWQgYnkgQGFybmF1ZGNlb2wgZm9yIHRoZSBJc3RpdHV0byBJdGFsaWFubyBkaSBUZWNub2xvZ2lhLg0KDQpGb3IgbW9yZSBpbmZvcm1hdGlvbiwgZG9jdW1lbnRhdGlvbiBhbmQgZXhhbXBsZSwgbG9vayBhdCB0aGUgWyoqU2ltU2VhcmNoIHByb2plY3QgVVJMKipdIGh0dHBzOi8vZGVpYi1nZWNvLmdpdGh1Yi5pby9zaW1zZWFyY2gvLCBvciB0aGlzIFtXSUtJXSBodHRwczovL2dpdGh1Yi5jb20vREVJQi1HRUNPL3NpbXNlYXJjaC93aWtpICBmb3IgYSBxdWljayBpbnN0YWxsYXRpb24gZ3VpZGUuIA0KDQoNCioqIFF1aWNrc3RhcnQ6ICoqDQoNClRvIGNvbXBpbGUgdGhlIHBsdWdpbiBhbmQgY3JlYXRlIGEgbG9jYWwgcmVwb3NpdG9yeToNCg0KYG12biBpbml0aWFsaXplIGNsZWFuIGJ1bmRsZS1tYXJrZG93bi1lbmNvZGVyOmVuY29kZU1hcmtkb3duIGluc3RhbGwgYnVuZGxlOmluZGV4YA0KDQo=</description>
    <size>3326796</size>
    <capability name='bundle'>
      <p n='symbolicname' v='simsearch-bundle'/>
      <p n='presentationname' v='SimSearch'/>
      <p n='version' t='version' v='1.4.3'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.affymetrix.common)(version&gt;=9.0.0)(!(version&gt;=10.0.0)))' extend='false' multiple='false' optional='true'>Import package com.affymetrix.common;resolution:=optional;version="[9.0,10)"</require>
    <require name='package' filter='(&amp;(package=com.affymetrix.genometry)(version&gt;=9.0.0)(!(version&gt;=10.0.0)))' extend='false' multiple='false' optional='true'>Import package com.affymetrix.genometry;resolution:=optional;version="[9.0,10)"</require>
    <require name='package' filter='(&amp;(package=com.affymetrix.genometry.color)(version&gt;=9.0.0)(!(version&gt;=10.0.0)))' extend='false' multiple='false' optional='true'>Import package com.affymetrix.genometry.color;resolution:=optional;version="[9.0,10)"</require>
    <require name='package' filter='(&amp;(package=com.affymetrix.genometry.general)(version&gt;=9.0.0)(!(version&gt;=10.0.0)))' extend='false' multiple='false' optional='true'>Import package com.affymetrix.genometry.general;resolution:=optional;version="[9.0,10)"</require>
    <require name='package' filter='(&amp;(package=com.affymetrix.genometry.span)(version&gt;=9.0.0)(!(version&gt;=10.0.0)))' extend='false' multiple='false' optional='true'>Import package com.affymetrix.genometry.span;resolution:=optional;version="[9.0,10)"</require>
    <require name='package' filter='(&amp;(package=com.affymetrix.genometry.style)(version&gt;=9.0.0)(!(version&gt;=10.0.0)))' extend='false' multiple='false' optional='true'>Import package com.affymetrix.genometry.style;resolution:=optional;version="[9.0,10)"</require>
    <require name='package' filter='(&amp;(package=com.affymetrix.genometry.symloader)(version&gt;=9.0.0)(!(version&gt;=10.0.0)))' extend='false' multiple='false' optional='true'>Import package com.affymetrix.genometry.symloader;resolution:=optional;version="[9.0,10)"</require>
    <require name='package' filter='(&amp;(package=com.affymetrix.genometry.symmetry)(version&gt;=9.0.0)(!(version&gt;=10.0.0)))' extend='false' multiple='false' optional='true'>Import package com.affymetrix.genometry.symmetry;resolution:=optional;version="[9.0,10)"</require>
    <require name='package' filter='(&amp;(package=com.affymetrix.genometry.symmetry.impl)(version&gt;=9.0.0)(!(version&gt;=10.0.0)))' extend='false' multiple='false' optional='true'>Import package com.affymetrix.genometry.symmetry.impl;resolution:=optional;version="[9.0,10)"</require>
    <require name='package' filter='(&amp;(package=com.affymetrix.genometry.util)(version&gt;=9.0.0)(!(version&gt;=10.0.0)))' extend='false' multiple='false' optional='true'>Import package com.affymetrix.genometry.util;resolution:=optional;version="[9.0,10)"</require>
    <require name='package' filter='(&amp;(package=com.google.common.collect)(version&gt;=16.0.0)(!(version&gt;=17.0.0)))' extend='false' multiple='false' optional='true'>Import package com.google.common.collect;resolution:=optional;version="[16.0,17)"</require>
    <require name='package' filter='(&amp;(package=com.google.common.io)(version&gt;=16.0.0)(!(version&gt;=17.0.0)))' extend='false' multiple='false' optional='true'>Import package com.google.common.io;resolution:=optional;version="[16.0,17)"</require>
    <require name='package' filter='(&amp;(package=javax.crypto))' extend='false' multiple='false' optional='true'>Import package javax.crypto;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.crypto.spec))' extend='false' multiple='false' optional='true'>Import package javax.crypto.spec;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.net))' extend='false' multiple='false' optional='true'>Import package javax.net;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='true'>Import package javax.net.ssl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='true'>Import package javax.servlet;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing))' extend='false' multiple='false' optional='true'>Import package javax.swing;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing.border))' extend='false' multiple='false' optional='true'>Import package javax.swing.border;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing.event))' extend='false' multiple='false' optional='true'>Import package javax.swing.event;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing.filechooser))' extend='false' multiple='false' optional='true'>Import package javax.swing.filechooser;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing.plaf))' extend='false' multiple='false' optional='true'>Import package javax.swing.plaf;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing.plaf.basic))' extend='false' multiple='false' optional='true'>Import package javax.swing.plaf.basic;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing.plaf.metal))' extend='false' multiple='false' optional='true'>Import package javax.swing.plaf.metal;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing.table))' extend='false' multiple='false' optional='true'>Import package javax.swing.table;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing.text))' extend='false' multiple='false' optional='true'>Import package javax.swing.text;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing.tree))' extend='false' multiple='false' optional='true'>Import package javax.swing.tree;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.avalon.framework.logger))' extend='false' multiple='false' optional='true'>Import package org.apache.avalon.framework.logger;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.log))' extend='false' multiple='false' optional='true'>Import package org.apache.log;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='true'>Import package org.apache.log4j;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.lorainelab.igb.genoviz.extensions.glyph)(version&gt;=9.0.0)(!(version&gt;=10.0.0)))' extend='false' multiple='false' optional='true'>Import package org.lorainelab.igb.genoviz.extensions.glyph;resolution:=optional;version="[9.0,10)"</require>
    <require name='package' filter='(&amp;(package=org.lorainelab.igb.services)(version&gt;=9.0.0)(!(version&gt;=10.0.0)))' extend='false' multiple='false' optional='true'>Import package org.lorainelab.igb.services;resolution:=optional;version="[9.0,10)"</require>
    <require name='package' filter='(&amp;(package=org.lorainelab.igb.services.window.tabs)(version&gt;=9.0.0)(!(version&gt;=10.0.0)))' extend='false' multiple='false' optional='true'>Import package org.lorainelab.igb.services.window.tabs;resolution:=optional;version="[9.0,10)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.framework;resolution:=optional;version="[1.8,2)"</require>
  </resource>
</repository>